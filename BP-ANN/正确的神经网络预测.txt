clc;clear;close all;
load fromfig;
%pic_pv=con2seq(pic_pv);pic_ide=con2seq(pic_ide);

lag=5;%自回归阶数
fn=180;%预测个数

iinput=pic_ide;
n=length(iinput);
%准备输入输出数据；
inputs=zeros(lag,n-lag);
for i=1:n-lag
    inputs(:,i)=iinput(i:i+lag-1);
end
targets=pic_ide(lag+1:end);
%创建网络
hiddenLayerSize=10;
net=fitnet(hiddenLayerSize);
%避免过拟合，划分训练，测试和验证数据的比例
net.divideParam.trainRatio=70/100;
net.divideParam.valRatio=15/100;
net.divideParam.testRatio=15/100;
%训练网络
[net,tr]=train(net,inputs,targets);

yn=net(inputs);
errors=targets-yn;
%根据图表判断拟合好坏;
figure,ploterrcorr(errors)%误差自相关时间序列图;
figure,parcorr(errors)      %parcorr求偏相关;
figure,plotresponse(con2seq(targets),con2seq(yn))%动态网络图的时间序列相应;
figure,ploterrhist(errors) %绘制误差直方图;
figure,plotperform(tr)    %小区网络性能;


f_in=iinput(n-lag+1:end)';
f_out=zeros(1,fn);

for i=1:fn
    f_out(i)=net(f_in);
    f_in=[f_in(2:end);f_out(i)];
end

figure,plot(1:n,iinput,'b',(n+1:n+fn),[f_out],'ro');
hold on;plot(1:n+fn,pv(1:n+fn),'g');

[err,MAPE,RMSE,MBE]=wucha(pv(n+1:n+fn),f_out,fn);